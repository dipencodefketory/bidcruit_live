# Generated by Django 3.1 on 2022-03-03 10:44

import candidate.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AudioExamAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_pdf', models.FileField(max_length=500, null=True, upload_to=candidate.models.audio_document_path_handler)),
            ],
        ),
        migrations.CreateModel(
            name='AudioExamQuestionAttemptUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.FileField(default='dummy_attempt.webp', null=True, upload_to='audio_exam_recordings')),
                ('obtain_marks', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BasicDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=10)),
                ('resume', models.FileField(max_length=500, null=True, upload_to=candidate.models.resume_path_handler)),
                ('contact', models.CharField(max_length=20)),
                ('designation', models.CharField(max_length=100)),
                ('ctc', models.CharField(max_length=100, null=True)),
                ('expectedctc', models.CharField(max_length=100, null=True)),
                ('total_exper', models.CharField(max_length=100, null=True)),
                ('current_working_in', models.CharField(max_length=100)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Candidate_Hide_Fields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.IntegerField(default=0)),
                ('contact', models.IntegerField(default=0)),
                ('edu_document', models.IntegerField(default=0)),
                ('exp_document', models.IntegerField(default=0)),
                ('portfolio_document', models.IntegerField(default=0)),
                ('certificate_document', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='candidate_job_apply_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_custom_id', models.CharField(max_length=10)),
                ('gender', models.CharField(max_length=10)),
                ('resume', models.FileField(max_length=500, null=True, upload_to=candidate.models.resume_path_handler)),
                ('secure_resume', models.BooleanField(default=False)),
                ('secure_resume_file', models.FileField(max_length=500, null=True, upload_to=candidate.models.resume_path_handler)),
                ('contact', models.CharField(max_length=20)),
                ('designation', models.CharField(max_length=100)),
                ('ctc', models.CharField(max_length=100, null=True)),
                ('expectedctc', models.CharField(max_length=100, null=True)),
                ('total_exper', models.CharField(max_length=100, null=True)),
                ('profile_pic', models.ImageField(null=True, upload_to='', verbose_name='candidate_profile_pic')),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateAward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('award_img', models.FileField(max_length=1000, null=True, upload_to=candidate.models.awards_document_path_handler)),
                ('awarder', models.CharField(max_length=50, null=True)),
                ('year', models.CharField(max_length=50, null=True)),
                ('summary', tinymce.models.HTMLField(null=True)),
                ('record_id', models.CharField(max_length=200, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateCertificationAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_certificate', models.CharField(max_length=200, null=True)),
                ('attached_certificate', models.FileField(max_length=500, null=True, upload_to=candidate.models.certificate_document_path_handler)),
                ('institute_organisation', models.CharField(max_length=50, null=True)),
                ('summary', tinymce.models.HTMLField(null=True)),
                ('year', models.CharField(max_length=50, null=True)),
                ('record_id', models.CharField(max_length=20, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateCounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=200, null=True)),
                ('grade', models.CharField(max_length=10, null=True)),
                ('start_date', models.CharField(max_length=50, null=True)),
                ('end_date', models.CharField(max_length=50, null=True)),
                ('certificate', models.FileField(max_length=1000, null=True, upload_to=candidate.models.degree_document_path_handler)),
                ('gap_count', models.FloatField(max_length=50, null=True)),
                ('gap_description', models.CharField(max_length=200, null=True)),
                ('summary', tinymce.models.HTMLField(null=True)),
                ('record_id', models.CharField(max_length=200, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateExpDocuments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(max_length=10)),
                ('exp_document', models.FileField(max_length=500, null=True, upload_to=candidate.models.experience_document_path_handler)),
                ('document_name', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_profile_name', models.CharField(max_length=100, null=True)),
                ('start_date', models.CharField(max_length=100, null=True)),
                ('end_date', models.CharField(max_length=100, null=True)),
                ('start_salary', models.CharField(max_length=100, null=True)),
                ('end_salary', models.CharField(max_length=100, null=True)),
                ('job_description_responsibility', tinymce.models.HTMLField(null=True)),
                ('website', models.CharField(max_length=100, null=True)),
                ('gap_count', models.FloatField(max_length=100, null=True)),
                ('gap', models.CharField(max_length=100, null=True)),
                ('record_id', models.CharField(max_length=200, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateHobbies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(max_length=200, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateJobPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_type', models.CharField(choices=[('PartTime', 'PartTime'), ('FullTime', 'FullTime')], max_length=50)),
                ('number_of_employee', models.CharField(choices=[('1-10', '1-10 employees'), ('11-50', '11-50 employees'), ('51-200', '51-200 employees'), ('201-500', '201-500 employees'), ('501-1000', '501-1000 employees'), ('1001-5000', '1001-5000 employees'), ('5001-10,000', '5001-10,000 employees'), ('10,001+', '10,001+ employees')], max_length=50)),
                ('working_days', models.CharField(choices=[('5day', '5 Days Working'), ('6day', '6 Days Working')], max_length=50)),
                ('preferred_shift', models.CharField(choices=[('day', 'Day Shift'), ('night', 'Night Shift'), ('flexible', 'Flexible'), ('any', 'Any of Above')], max_length=50)),
                ('relocation', models.BooleanField(null=True)),
                ('relocation_cities', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateJobPreferenceOther',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200)),
                ('value', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateOtherField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(max_length=200, null=True)),
                ('label', models.CharField(max_length=200, null=True)),
                ('value', models.CharField(max_length=200, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CandidatePortfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_title', models.CharField(max_length=200, null=True)),
                ('link', models.CharField(max_length=2000, null=True)),
                ('description', models.CharField(max_length=1000, null=True)),
                ('year', models.CharField(max_length=500, null=True)),
                ('learning_from_project', tinymce.models.HTMLField(null=True)),
                ('record_id', models.CharField(max_length=200, null=True)),
                ('project_document', models.FileField(max_length=500, null=True, upload_to=candidate.models.portfolio_document_path_handler)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_no', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=200)),
                ('dob', models.CharField(max_length=20, null=True)),
                ('website', models.CharField(max_length=60, null=True)),
                ('zip_code', models.CharField(max_length=8, null=True)),
                ('user_image', models.ImageField(upload_to='profile_image/%Y/%m/%d', verbose_name='candidate_profile_image')),
                ('url_name', models.CharField(max_length=50, null=True)),
                ('custom_url', models.CharField(max_length=300, null=True)),
                ('current_salary', models.IntegerField(null=True)),
                ('expected_salary_min', models.CharField(max_length=50, null=True)),
                ('expected_salary_max', models.CharField(max_length=50, null=True)),
                ('total_experience', models.FloatField(null=True)),
                ('designation', models.CharField(max_length=50, null=True)),
                ('preferred_cities', models.CharField(max_length=200, null=True)),
                ('qr_code', models.ImageField(null=True, upload_to='qr_code/%Y/%m/%d', verbose_name='candidate_qr_code')),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
                ('technical_knowledge', tinymce.models.HTMLField(null=True)),
                ('about_me', tinymce.models.HTMLField(null=True)),
                ('resume', models.FileField(null=True, upload_to='')),
                ('resume_password', models.CharField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateProfileTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('template_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateReference',
            fields=[
                ('id', models.CharField(default=candidate.models.generate_pk, max_length=255, primary_key=True, serialize=False, unique=True)),
                ('record_id', models.CharField(max_length=200, null=True)),
                ('email', models.EmailField(max_length=200, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('phone', models.CharField(max_length=200, null=True)),
                ('position', models.CharField(max_length=200, null=True)),
                ('summary', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateSEO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('looking_for_job', models.BooleanField(default=False)),
                ('google_search', models.BooleanField(default=False)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateSkillUserMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_exp', models.CharField(max_length=10, null=True)),
                ('last_used', models.CharField(max_length=10, null=True)),
                ('record_id', models.CharField(max_length=200, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateSocialNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_name', models.CharField(max_length=50, null=True)),
                ('url', models.URLField(null=True)),
                ('record_id', models.CharField(max_length=200, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, null=True)),
                ('tag_line', models.CharField(max_length=100, null=True)),
                ('summary', models.CharField(max_length=500, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('final_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Coding_Exam_result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_question', models.IntegerField(null=True)),
                ('answered', models.IntegerField(null=True)),
                ('obtain_marks', models.CharField(max_length=10, null=True)),
                ('coding_pdf', models.FileField(max_length=500, null=True, upload_to=candidate.models.coding_document_path_handler)),
            ],
        ),
        migrations.CreateModel(
            name='CodingApiSubjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CodingBackEndExamFill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_code', tinymce.models.HTMLField(null=True)),
                ('obtain_marks', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CodingFrontEndExamFill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('html_code', tinymce.models.HTMLField(null=True)),
                ('css_code', tinymce.models.HTMLField(null=True)),
                ('js_code', tinymce.models.HTMLField(null=True)),
                ('obtain_marks', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CodingScoreCardFill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(null=True)),
                ('comment', models.TextField(null=True)),
                ('rating', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='company_data_request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=500, null=True)),
                ('zip_link', models.CharField(max_length=500, null=True)),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=200)),
                ('country_sort_name', models.CharField(max_length=10)),
                ('country_phone_code', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Descriptive_Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_marks', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('marks', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('ans', tinymce.models.HTMLField()),
                ('status', models.IntegerField(default=0, null=True)),
                ('time', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Descriptive_Exam_result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_question', models.IntegerField(null=True)),
                ('answered', models.IntegerField(null=True)),
                ('not_answered', models.IntegerField(null=True)),
                ('obain_time', models.CharField(max_length=10, null=True)),
                ('mcq_pdf', models.FileField(max_length=500, null=True, upload_to=candidate.models.Descriptive_document_path_handler)),
                ('obain_marks', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamTimeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FitScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_skill', models.CharField(max_length=2000, null=True)),
                ('unmatch_skill', models.CharField(max_length=2000, null=True)),
                ('fitscore', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fluency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fluency', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ForgotPassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_password', models.CharField(max_length=20)),
                ('forgot_time', models.DateTimeField(max_length=200)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Gap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.CharField(max_length=20, null=True)),
                ('end_date', models.CharField(max_length=20, null=True)),
                ('reason', models.CharField(max_length=200, null=True)),
                ('type', models.CharField(max_length=100, null=True)),
                ('record_id', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Image_Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ansfile', models.FileField(null=True, upload_to='')),
                ('marks', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('status', models.IntegerField(default=0, null=True)),
                ('time', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image_Exam_result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_question', models.IntegerField(null=True)),
                ('answered', models.IntegerField(null=True)),
                ('not_answered', models.IntegerField(null=True)),
                ('obain_time', models.CharField(max_length=10, null=True)),
                ('obain_marks', models.CharField(max_length=10, null=True)),
                ('image_pdf', models.FileField(max_length=500, null=True, upload_to=candidate.models.images_document_path_handler)),
            ],
        ),
        migrations.CreateModel(
            name='IndustryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidateAddedSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='JcrFill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='JcrRatio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Primary', models.CharField(max_length=10)),
                ('Secondary', models.CharField(max_length=10)),
                ('Objective', models.CharField(max_length=10)),
                ('Total', models.CharField(max_length=10)),
                ('jcr_pdf', models.FileField(max_length=500, null=True, upload_to=candidate.models.jcr_document_path_handler)),
            ],
        ),
        migrations.CreateModel(
            name='JobShift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='JobTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='MaritalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Mcq_Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
                ('status', models.IntegerField(default=0, null=True)),
                ('time', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mcq_Exam_result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_question', models.IntegerField(null=True)),
                ('answered', models.IntegerField(null=True)),
                ('not_answered', models.IntegerField(null=True)),
                ('obain_time', models.CharField(max_length=10, null=True)),
                ('obain_marks', models.CharField(max_length=10, null=True)),
                ('mcq_pdf', models.FileField(max_length=500, null=True, upload_to=candidate.models.mcqs_document_path_handler)),
            ],
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NoticePeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice_period', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentTerms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissionname', models.CharField(max_length=500)),
                ('is_company', models.BooleanField(default=False)),
                ('is_candidate', models.BooleanField(default=False)),
                ('is_agency', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelname', models.CharField(max_length=500)),
                ('is_company', models.BooleanField(default=False)),
                ('is_candidate', models.BooleanField(default=False)),
                ('is_agency', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PreRequisitesFill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prerequisites_data', models.CharField(max_length=2000, null=True)),
                ('prerequisites_pdf', models.FileField(max_length=500, null=True, upload_to=candidate.models.prerequisites_document_path_handler)),
                ('result', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_name', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200, null=True)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('url', models.CharField(default='', max_length=15)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionDifficultyLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='RandomImageExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='RecruiterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ReplacementTerms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Stage_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UniversityBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Upload_Resume_Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=50)),
                ('preview_image', models.FileField(upload_to='resume_theme/%Y/%m/%d', verbose_name='resume__theme_image')),
                ('html_file_name', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadCv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.FileField(upload_to='resume/%Y/%m/%d', verbose_name='candidate_resume')),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_resume_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThemeLayout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layout_name', models.CharField(max_length=50)),
                ('layout_block_number', models.CharField(max_length=50)),
                ('section_name', models.CharField(max_length=50)),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resume_theme_layout', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThemeFont',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('font_name', models.CharField(max_length=50)),
                ('font_size', models.CharField(max_length=50)),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_theme_font', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThemeColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background', models.CharField(max_length=50)),
                ('primary', models.CharField(max_length=50)),
                ('accent', models.CharField(max_length=50, null=True)),
                ('text', models.CharField(max_length=50)),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resume_theme_color', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThemeActive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_name', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resume_theme_active', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=200)),
                ('country_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_country_id', to='candidate.country')),
            ],
        ),
        migrations.CreateModel(
            name='ReferralDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referred_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referred_by_candidate_id', to=settings.AUTH_USER_MODEL)),
                ('referred_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referred_to_candidate_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RandomMCQExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_RandomMCQExam_exam', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]

# Generated by Django 3.1 on 2022-03-03 10:44

import company.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('candidate', '0001_initial'),
        ('agency', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paragraph_description', tinymce.models.HTMLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Audio_subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='AudioExamQuestionUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_mark', models.IntegerField(null=True)),
                ('question_time', models.CharField(max_length=5, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Audio_exam_question_unit_question', to='company.audio')),
            ],
        ),
        migrations.CreateModel(
            name='AudioExamTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=100)),
                ('exam_type', models.CharField(max_length=6)),
                ('total_question', models.IntegerField()),
                ('question_wise_time', models.BooleanField(default=True)),
                ('total_exam_time', models.CharField(max_length=9)),
                ('is_video', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('delete_at', models.DateTimeField(max_length=200, null=True)),
                ('audioquestions', models.ManyToManyField(related_name='Audio_exam_template_questions', to='company.Audio')),
            ],
        ),
        migrations.CreateModel(
            name='CandidateCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CandidateJobStagesStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_number', models.IntegerField()),
                ('assessment_done', models.BooleanField(default=False, null=True)),
                ('action_performed', models.BooleanField(default=False, null=True)),
                ('status', models.IntegerField(default=0)),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_workflow_stages_status', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CodingExamConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=100)),
                ('total_time', models.CharField(max_length=50)),
                ('total_question', models.CharField(max_length=50)),
                ('assignment_type', models.CharField(max_length=50)),
                ('exam_type', models.CharField(max_length=50)),
                ('technology', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('delete_at', models.DateTimeField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CodingSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, null=True)),
                ('api_subject_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coding_api_subject_id', to='candidate.codingapisubjects')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_adminid_Employee', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ManyToManyField(null=True, related_name='company_userid', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomScorecardResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('comment', models.TextField(null=True)),
                ('rating', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomTemplateScorecard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('system_generated', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=False)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Department', to='company.company')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Department', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Descriptive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paragraph_description', tinymce.models.HTMLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Descriptive', to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='Descriptive_subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=50)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Descriptive_subject', to='company.company')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Descriptive_subject', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DescriptiveExamQuestionUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_mark', models.IntegerField(null=True)),
                ('question_time', models.CharField(max_length=5, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Descriptive_exam_question_unit_question', to='company.descriptive')),
            ],
        ),
        migrations.CreateModel(
            name='DescriptiveExamTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=100)),
                ('assignment_type', models.CharField(max_length=10, null=True)),
                ('total_question', models.IntegerField()),
                ('question_wise_time', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('delete_at', models.DateTimeField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamQuestionUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_mark', models.IntegerField(null=True)),
                ('question_time', models.CharField(max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=100)),
                ('exam_type', models.CharField(max_length=6)),
                ('total_question', models.IntegerField()),
                ('basic_questions_count', models.IntegerField()),
                ('intermediate_questions_count', models.IntegerField()),
                ('advanced_questions_count', models.IntegerField()),
                ('allow_negative_marking', models.BooleanField(default=True)),
                ('marking_system', models.CharField(max_length=15, null=True)),
                ('basic_question_marks', models.IntegerField(null=True)),
                ('intermediate_question_marks', models.IntegerField(null=True)),
                ('advanced_question_marks', models.IntegerField(null=True)),
                ('question_wise_time', models.BooleanField(null=True)),
                ('duration', models.CharField(max_length=10, null=True)),
                ('negative_mark_percent', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('delete_at', models.DateTimeField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImageExamQuestionUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_mark', models.IntegerField(null=True)),
                ('question_time', models.CharField(max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImageExamTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=100)),
                ('exam_type', models.CharField(max_length=6)),
                ('total_question', models.IntegerField()),
                ('basic_questions_count', models.IntegerField()),
                ('intermediate_questions_count', models.IntegerField()),
                ('advanced_questions_count', models.IntegerField()),
                ('allow_negative_marking', models.BooleanField(default=True)),
                ('marking_system', models.CharField(max_length=15, null=True)),
                ('basic_question_marks', models.IntegerField(null=True)),
                ('intermediate_question_marks', models.IntegerField(null=True)),
                ('advanced_question_marks', models.IntegerField(null=True)),
                ('question_wise_time', models.BooleanField(null=True)),
                ('duration', models.CharField(max_length=10, null=True)),
                ('negative_mark_percent', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('delete_at', models.DateTimeField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('dob', models.CharField(max_length=20, null=True)),
                ('phone_no', models.CharField(max_length=20)),
                ('current_zip_code', models.CharField(max_length=10, null=True)),
                ('current_street', models.CharField(max_length=50, null=True)),
                ('permanent_zip_code', models.CharField(max_length=10, null=True)),
                ('permanent_street', models.CharField(max_length=50, null=True)),
                ('current_city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_current_city', to='candidate.city')),
                ('current_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_current_country', to='candidate.country')),
                ('current_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_current_state', to='candidate.state')),
                ('gender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_gender', to='candidate.gender')),
                ('permanent_city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_permanent_city', to='candidate.city')),
                ('permanent_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_permanent_country', to='candidate.country')),
                ('permanent_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_permanent_state', to='candidate.state')),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidateBasicDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(max_length=10)),
                ('resume', models.FileField(max_length=500, null=True, upload_to=company.models.resume_path_handler)),
                ('contact', models.CharField(max_length=20)),
                ('designation', models.CharField(max_length=100)),
                ('ctc', models.CharField(max_length=100, null=True)),
                ('expectedctc', models.CharField(max_length=100, null=True)),
                ('total_exper', models.CharField(max_length=100, null=True)),
                ('profile_pic', models.ImageField(null=True, upload_to='', verbose_name='candidate_pf_pic')),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('delete_at', models.DateTimeField(max_length=200, null=True)),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Candidateid_InternalCandidateBasicDetail_company', to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(null=True, related_name='add_internalcandidate_categories_id', to='company.CandidateCategories')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_InternalCandidateBasicDetails', to='company.company')),
                ('current_city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='add_internalcandidate_current_city', to='candidate.city')),
                ('delete_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_user_id_InternalCandidateBasicDetails', to=settings.AUTH_USER_MODEL)),
                ('notice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='add_internalcandidate_applyjob_notice_period', to='candidate.noticeperiod')),
                ('prefered_city', models.ManyToManyField(null=True, related_name='add_internalcandidate_prefered_city', to='candidate.City')),
                ('skills', models.ManyToManyField(null=True, related_name='add_internalcandidate_skill_id', to='candidate.Skill')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='add_internalcandidate_source', to='candidate.source')),
                ('tags', models.ManyToManyField(null=True, related_name='add_internalcandidate_tags_id', to='candidate.Tags')),
                ('update_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_user_id_InternalCandidateBasicDetails', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_InternalCandidateBasicDetails', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterviewScorecardResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('comment', models.TextField(null=True)),
                ('rating', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobCreation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100, null=True)),
                ('target_date', models.DateField()),
                ('remote_job', models.BooleanField()),
                ('salary_as_per_market', models.BooleanField(default=False)),
                ('min_salary', models.CharField(max_length=10)),
                ('max_salary', models.CharField(max_length=10)),
                ('experience_year_min', models.CharField(max_length=10)),
                ('experience_year_max', models.CharField(max_length=10)),
                ('job_description', tinymce.models.HTMLField()),
                ('benefits', tinymce.models.HTMLField(max_length=100)),
                ('requirements', tinymce.models.HTMLField(max_length=100)),
                ('zip_code', models.CharField(max_length=10)),
                ('job_link', models.TextField(null=True)),
                ('is_publish', models.BooleanField(default=False)),
                ('publish_at', models.DateTimeField(null=True)),
                ('close_job_targetdate', models.BooleanField(default=False)),
                ('close_job', models.BooleanField(default=False)),
                ('close_job_at', models.DateTimeField(null=True)),
                ('created_by', models.CharField(max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_city', to='candidate.city')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_JobCreation', to='company.company')),
                ('contact_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_person_id', to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_country', to='candidate.country')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_department_id', to='company.department')),
                ('industry_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='industry_type_id', to='candidate.industrytype')),
                ('job_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_owner', to=settings.AUTH_USER_MODEL)),
                ('job_shift_id', models.ManyToManyField(null=True, related_name='JobShift_job', to='candidate.JobShift')),
                ('job_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_type_id', to='candidate.jobtypes')),
                ('required_skill', models.ManyToManyField(null=True, related_name='required_skill_job', to='candidate.Skill')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_status_id', to='candidate.jobstatus')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_JobCreation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OfferNegotiation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100, null=True)),
                ('annual_ctc', models.TextField(null=True)),
                ('notice_period', models.CharField(max_length=100, null=True)),
                ('joining_date', models.DateField(null=True)),
                ('other_details', models.TextField(null=True)),
                ('from_company', models.BooleanField(null=True)),
                ('action_performed', models.BooleanField(default=False)),
                ('action_name', models.CharField(max_length=100, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Paragraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paragraph_type', models.CharField(max_length=50, null=True)),
                ('paragraph_description', tinymce.models.HTMLField()),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Paragraph', to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('system_generated', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=False)),
                ('description', models.CharField(max_length=500, null=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Role_company', to='company.company')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_Role', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Template_creation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=2000)),
                ('active', models.BooleanField(default=True)),
                ('status', models.BooleanField(default=False, null=True)),
                ('created_by', models.CharField(max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TemplateCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Template', to='company.company')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.stage_list')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Template', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Workflows',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('is_configured', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('created_by', models.CharField(max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('delete_at', models.DateTimeField(max_length=200, null=True)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Workflows', to='company.company')),
                ('delete_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_user_id_Workflows', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_user_id_Workflows', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Workflows', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkflowStages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_name', models.CharField(max_length=100)),
                ('sequence_number', models.IntegerField()),
                ('display', models.BooleanField(default=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_category', to='company.templatecategory')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_WorkflowStages', to='company.company')),
                ('stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_stage', to='candidate.stage_list')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_template', to='company.template_creation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_WorkflowStages', to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_id', to='company.workflows')),
            ],
        ),
        migrations.CreateModel(
            name='WorkflowConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_automation', models.BooleanField(null=True)),
                ('shortlist', models.FloatField(null=True)),
                ('onhold', models.FloatField(null=True)),
                ('reject', models.FloatField(null=True)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_WorkflowConfiguration', to='company.company')),
                ('interviewer', models.ManyToManyField(null=True, related_name='interview_name', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_WorkflowConfiguration', to=settings.AUTH_USER_MODEL)),
                ('workflow_stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_stage_id', to='company.workflowstages')),
            ],
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currentcompleted', models.BooleanField(default=False)),
                ('action_required', models.CharField(max_length=100, null=True)),
                ('reject', models.BooleanField(default=False)),
                ('withdraw', models.BooleanField(default=False)),
                ('hire', models.BooleanField(default=False)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('candidate_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_id_Tracker', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Tracker', to='company.company')),
                ('current_stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_stage_Tracker', to='candidate.stage_list')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_id_Tracker', to='company.jobcreation')),
                ('next_stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_stage_Tracker', to='candidate.stage_list')),
            ],
        ),
        migrations.AddField(
            model_name='template_creation',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Template_creation_category', to='company.templatecategory'),
        ),
        migrations.AddField(
            model_name='template_creation',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Template_creation', to='company.company'),
        ),
        migrations.AddField(
            model_name='template_creation',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Template_creation_stage', to='candidate.stage_list'),
        ),
        migrations.AddField(
            model_name='template_creation',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Template_creation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ShortlistedCandidates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shortlisted_candidate_id', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shortlisted_company_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RolePermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_generated', models.BooleanField(default=False)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RolePermissions_company', to='company.company')),
                ('permission', models.ManyToManyField(related_name='RolePermissions_permission', to='candidate.Permissions')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RolePermissions_company', to='company.role')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_RolePermissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_QuestionPaper', to='company.company')),
                ('exam_question_units', models.ManyToManyField(related_name='question_paper_exam_question_units', to='company.ExamQuestionUnit')),
                ('exam_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_paper_exam_template', to='company.examtemplate')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_QuestionPaper', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PreRequisites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', tinymce.models.HTMLField()),
                ('html_data', tinymce.models.HTMLField()),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prerequisites_creation_category', to='company.templatecategory')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_PreRequisites', to='company.company')),
                ('stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prerequisites_creation_stage', to='candidate.stage_list')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prerequisites_creation_temnplate', to='company.template_creation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_PreRequisites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paragraph_subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=50)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Paragraph_subject', to='company.company')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Paragraph_subject', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paragraph_option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=50)),
                ('option1', models.CharField(max_length=50)),
                ('option2', models.CharField(max_length=50)),
                ('option3', models.CharField(max_length=50)),
                ('option4', models.CharField(max_length=50)),
                ('answer', models.CharField(max_length=50)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Paragraph_option', to='company.company')),
                ('paragraph', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='option_paragraph', to='company.paragraph')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='option_subject', to='company.paragraph_subject')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Paragraph_option', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='paragraph',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paragraph_subject', to='company.paragraph_subject'),
        ),
        migrations.AddField(
            model_name='paragraph',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Paragraph', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OnTheGoStages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_name', models.CharField(max_length=100, null=True)),
                ('sequence_number', models.IntegerField()),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_OnTheGoStages', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_id_OnTheGoStages', to='company.jobcreation')),
                ('stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='on_the_go_stagelist_id', to='candidate.stage_list')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='on_the_go_template_id', to='company.template_creation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_OnTheGoStages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MCQ_subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=50)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_MCQ_subject', to='company.company')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_MCQ_subject', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='mcq_Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_description', models.TextField()),
                ('correct_option', models.CharField(max_length=1)),
                ('option_a', models.CharField(max_length=200, null=True)),
                ('option_b', models.CharField(max_length=200, null=True)),
                ('option_c', models.CharField(max_length=200, null=True)),
                ('option_d', models.CharField(max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_mcq_Question', to='company.company')),
                ('mcq_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcq_subject_id', to='company.mcq_subject')),
                ('question_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_mcq_question_level', to='candidate.questiondifficultylevel')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_mcq_Question', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobWorkflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('onthego', models.BooleanField(default=False)),
                ('withworkflow', models.BooleanField(default=False)),
                ('is_application_review', models.BooleanField(default=False)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_JobWorkflow', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_workflow_id', to='company.jobcreation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_JobWorkflow', to=settings.AUTH_USER_MODEL)),
                ('workflow_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_workflow_id', to='company.workflows')),
            ],
        ),
        migrations.CreateModel(
            name='JobOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_name', models.TextField(null=True)),
                ('bond', models.TextField(null=True)),
                ('NDA', models.TextField(null=True)),
                ('offer_letter', models.FileField(null=True, upload_to=company.models.job_offer_path_handler)),
                ('is_accepted', models.BooleanField(default=False)),
                ('rejected_by_candidate', models.BooleanField(default=False)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('candidate_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_JobOffer', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_id_JobOffer', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='JobOffer_job_id', to='company.jobcreation')),
                ('job_stages_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='JobOffer_job_stages_id', to='company.candidatejobstagesstatus')),
                ('negotiations', models.ManyToManyField(related_name='JobOffer_participants_ids', to='company.OfferNegotiation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='JobOffer_by_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobCreationTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100, null=True)),
                ('target_date', models.DateField()),
                ('remote_job', models.BooleanField()),
                ('salary_as_per_market', models.BooleanField(default=False)),
                ('min_salary', models.CharField(max_length=10)),
                ('max_salary', models.CharField(max_length=10)),
                ('experience_year_min', models.CharField(max_length=10)),
                ('experience_year_max', models.CharField(max_length=10)),
                ('job_description', tinymce.models.HTMLField()),
                ('benefits', tinymce.models.HTMLField(max_length=100)),
                ('requirements', tinymce.models.HTMLField(max_length=100)),
                ('zip_code', models.CharField(max_length=10)),
                ('created_by', models.CharField(max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('delete_at', models.DateTimeField(max_length=200, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_creation_category', to='company.templatecategory')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_template_city', to='candidate.city')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_JobTemplate', to='company.company')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_template_country', to='candidate.country')),
                ('delete_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_user_id_JobCreationTemplate', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_template_department', to='company.department')),
                ('industry_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_template_industry_type_id', to='candidate.industrytype')),
                ('job_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_template_type_id', to='candidate.jobtypes')),
                ('jobshift', models.ManyToManyField(related_name='job_template_shift', to='candidate.JobShift')),
                ('required_skill', models.ManyToManyField(null=True, related_name='job_template_required_skill', to='candidate.Skill')),
                ('stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_creation_stage', to='candidate.stage_list')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_template_status_id', to='candidate.jobstatus')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_creation_temnplate', to='company.template_creation')),
                ('update_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_user_id_JobCreationTemplates', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_JobTemplate', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JCR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ratio', models.IntegerField()),
                ('flag', models.CharField(max_length=10, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jcr_creation_category', to='company.templatecategory')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_jcr', to='company.company')),
                ('pid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jcr_id', to='company.jcr')),
                ('stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jcr_creation_stage', to='candidate.stage_list')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jcr_creation_temnplate', to='company.template_creation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_jcr', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterviewTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_name', models.CharField(max_length=100)),
                ('interview_type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('delete_at', models.DateTimeField(max_length=200, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interview_creation_category', to='company.templatecategory')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interview_company_id', to='company.company')),
                ('delete_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_user_id_InterviewTemplate', to=settings.AUTH_USER_MODEL)),
                ('stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interview_creation_stage', to='candidate.stage_list')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interview_creation_temnplate', to='company.template_creation')),
                ('update_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_user_id_InterviewTemplate', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_InterviewTemplate', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterviewScorecard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('comment', models.TextField(null=True)),
                ('rating', models.CharField(max_length=10, null=True)),
                ('interview_template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interview_template_id', to='company.interviewtemplate')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('time', models.TimeField(null=True)),
                ('meridiem', models.CharField(max_length=10, null=True)),
                ('interview_duration', models.CharField(max_length=100, null=True)),
                ('is_accepted', models.BooleanField(null=True)),
                ('interview_start_button_status', models.BooleanField(default=False, null=True)),
                ('status', models.IntegerField(default=0, null=True)),
                ('reschedule_message', models.TextField(null=True)),
                ('interview_link', models.TextField(null=True, unique=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('candidate_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_InterviewSchedule', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_id_InterviewSchedule', to='company.company')),
                ('interview_template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interview_template_obj', to='company.interviewtemplate')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='InterviewSchedule_job_id', to='company.jobcreation')),
                ('job_stages_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='InterviewSchedule_job_stages_id', to='company.candidatejobstagesstatus')),
                ('participants', models.ManyToManyField(related_name='InterviewSchedule_participants_ids', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='InterviewSchedule_template_id', to='company.template_creation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='InterviewSchedule_by_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterviewResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_InterviewResult', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_id_InterviewResult', to='company.company')),
                ('interview_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_id_InterviewResult', to='company.interviewtemplate')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_id_InterviewResult', to='company.jobcreation')),
                ('scorecard_results', models.ManyToManyField(null=True, related_name='InterviewResult_scorecards', to='company.InterviewScorecardResult')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='InterviewResult_by_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidateSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_source_name', models.CharField(max_length=200, null=True)),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_source', to='company.internalcandidate')),
                ('source_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_source_id', to='candidate.source')),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidateProfessionalSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_added_skills', models.ManyToManyField(null=True, related_name='internal_candidate_skill_user_map', to='candidate.InternalCandidateAddedSkill')),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_skill_user_id', to='company.internalcandidate')),
                ('skills', models.ManyToManyField(null=True, related_name='internal_candidate_skill_user_map', to='candidate.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidateProfessionalDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.CharField(max_length=20, null=True)),
                ('current_job_title', models.CharField(max_length=30, null=True)),
                ('highest_qualification', models.CharField(max_length=30, null=True)),
                ('expected_salary', models.CharField(max_length=20, null=True)),
                ('current_salary', models.CharField(max_length=20, null=True)),
                ('current_employer', models.CharField(max_length=30, null=True)),
                ('skills', models.CharField(max_length=100, null=True)),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_professional_detail', to='company.internalcandidate')),
                ('notice_period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_notice_period', to='candidate.noticeperiod')),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidatePreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_days', models.CharField(choices=[('5day', '5 Days Working'), ('6day', '6 Days Working')], max_length=20)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_preference_city', to='candidate.city')),
                ('company_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_preference_company_type', to='candidate.companytype')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_preference_country', to='candidate.country')),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_preference', to='company.internalcandidate')),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidatePortfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100)),
                ('project_link', models.CharField(max_length=100)),
                ('attachment', models.FileField(null=True, upload_to='')),
                ('description', tinymce.models.HTMLField()),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_portfolio', to='company.internalcandidate')),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidateNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_InternalCandidateNotes', to='company.company')),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_notes_id', to='company.internalcandidatebasicdetails')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_InternalCandidateNotes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidateExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100, null=True)),
                ('company_name', models.CharField(max_length=100, null=True)),
                ('start_date', models.CharField(max_length=100, null=True)),
                ('end_date', models.CharField(max_length=100, null=True)),
                ('summary', models.CharField(max_length=100, null=True)),
                ('currently_working', models.BooleanField(default=False, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_company_id', to='candidate.company')),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_experience_id', to='company.internalcandidate')),
                ('skills', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_skill_id', to='candidate.skill')),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidateEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=50, null=True)),
                ('duration', models.CharField(max_length=50, null=True)),
                ('start_date', models.CharField(max_length=50, null=True)),
                ('end_date', models.CharField(max_length=50, null=True)),
                ('is_pursuing', models.BooleanField(default=False, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('update_at', models.DateTimeField(max_length=200, null=True)),
                ('degree', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_degree', to='candidate.degree')),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_id', to='company.internalcandidate')),
                ('university_board', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_university', to='candidate.universityboard')),
            ],
        ),
        migrations.CreateModel(
            name='InternalCandidateAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to='')),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_candidate_attachment', to='company.internalcandidate')),
            ],
        ),
        migrations.CreateModel(
            name='ImageSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=50)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_ImageSubject', to='company.company')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_ImageSubject', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ImageQuestionPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_ImageQuestionPaper', to='company.company')),
                ('exam_question_units', models.ManyToManyField(related_name='Image_question_paper_exam_question_units', to='company.ImageExamQuestionUnit')),
                ('exam_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Image_question_paper_exam_template', to='company.imageexamtemplate')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_ImageQuestionPaper', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ImageQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_que_description', models.TextField()),
                ('question_file', models.FileField(null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_ImageQuestion', to='company.company')),
                ('question_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_image_question_level', to='candidate.questiondifficultylevel')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Image_subject', to='company.imagesubject')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_ImageQuestion', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ImageOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option1', models.CharField(max_length=50)),
                ('option2', models.CharField(max_length=50)),
                ('option3', models.CharField(max_length=50)),
                ('option4', models.CharField(max_length=50)),
                ('answer', models.CharField(max_length=50)),
                ('file1', models.FileField(null=True, upload_to='')),
                ('file2', models.FileField(null=True, upload_to='')),
                ('file3', models.FileField(null=True, upload_to='')),
                ('file4', models.FileField(null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_ImageOption', to='company.company')),
                ('question_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ImageQuestion_id', to='company.imagequestion')),
                ('subject_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ImageSubject_id', to='company.imagesubject')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_ImageOption', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='advanced_questions',
            field=models.ManyToManyField(related_name='Image_exam_template_advanced_questions', to='company.ImageQuestion'),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='basic_questions',
            field=models.ManyToManyField(related_name='Image_exam_template_basic_questions', to='company.ImageQuestion'),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Image_creation_category', to='company.templatecategory'),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_ImageExamTemplate', to='company.company'),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='delete_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_user_id_ImageExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='intermediate_questions',
            field=models.ManyToManyField(related_name='Image_exam_template_intermediate_questions', to='company.ImageQuestion'),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Image_creation_stage', to='candidate.stage_list'),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcq_subject_temnplate', to='company.imagesubject'),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Image_creation_temnplate', to='company.template_creation'),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='update_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_user_id_ImageExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='imageexamtemplate',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_ImageExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='imageexamquestionunit',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Image_exam_question_unit_question', to='company.imagequestion'),
        ),
        migrations.AddField(
            model_name='imageexamquestionunit',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Image_mcq_que_unit_temnplate', to='company.template_creation'),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='advanced_questions',
            field=models.ManyToManyField(related_name='exam_template_advanced_questions', to='company.mcq_Question'),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='basic_questions',
            field=models.ManyToManyField(related_name='exam_template_basic_questions', to='company.mcq_Question'),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcq_creation_category', to='company.templatecategory'),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_ExamTemplate', to='company.company'),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='delete_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_user_id_ExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='intermediate_questions',
            field=models.ManyToManyField(related_name='exam_template_intermediate_questions', to='company.mcq_Question'),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcq_creation_stage', to='candidate.stage_list'),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcq_subject_temnplate', to='company.mcq_subject'),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcq_creation_temnplate', to='company.template_creation'),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='update_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_user_id_ExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='examtemplate',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_ExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='examquestionunit',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_question_unit_question', to='company.mcq_question'),
        ),
        migrations.AddField(
            model_name='examquestionunit',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcq_que_unit_temnplate', to='company.template_creation'),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=90)),
                ('last_name', models.CharField(max_length=90)),
                ('contact_num', models.CharField(max_length=20)),
                ('status', models.BooleanField(default=False)),
                ('profile_pic', models.ImageField(null=True, upload_to='', verbose_name='internal_user_pic')),
                ('unique_id', models.CharField(max_length=100, null=True, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_employee', to='company.company')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_department', to='company.department')),
                ('employee_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_employee', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_role', to='company.role')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_employee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DescriptiveQuestionPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_DescriptiveQuestionPaper', to='company.company')),
                ('exam_question_units', models.ManyToManyField(related_name='Descriptive_question_paper_exam_question_units', to='company.DescriptiveExamQuestionUnit')),
                ('exam_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Descriptive_question_paper_exam_template', to='company.descriptiveexamtemplate')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_DescriptiveQuestionPaper', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='descriptiveexamtemplate',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Descriptive_creation_category', to='company.templatecategory'),
        ),
        migrations.AddField(
            model_name='descriptiveexamtemplate',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_DescriptiveExamTemplate', to='company.company'),
        ),
        migrations.AddField(
            model_name='descriptiveexamtemplate',
            name='delete_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_user_id_DescriptiveExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='descriptiveexamtemplate',
            name='descriptivequestions',
            field=models.ManyToManyField(related_name='Descriptive_exam_template_questions', to='company.Descriptive'),
        ),
        migrations.AddField(
            model_name='descriptiveexamtemplate',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Descriptive_creation_stage', to='candidate.stage_list'),
        ),
        migrations.AddField(
            model_name='descriptiveexamtemplate',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Descriptive_subject_temnplate', to='company.descriptive_subject'),
        ),
        migrations.AddField(
            model_name='descriptiveexamtemplate',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Descriptive_creation_temnplate', to='company.template_creation'),
        ),
        migrations.AddField(
            model_name='descriptiveexamtemplate',
            name='update_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_user_id_DescriptiveExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='descriptiveexamtemplate',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_DescriptiveExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='descriptiveexamquestionunit',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Descriptive_que_unit_temnplate', to='company.template_creation'),
        ),
        migrations.AddField(
            model_name='descriptive',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='descriptive_subject', to='company.descriptive_subject'),
        ),
        migrations.AddField(
            model_name='descriptive',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Descriptive', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CustomTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('enable_file_input', models.BooleanField(default=False)),
                ('file_input', models.FileField(null=True, upload_to='')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_creation_category', to='company.templatecategory')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_company_id', to='company.company')),
                ('scorecards', models.ManyToManyField(null=True, related_name='customTemplate_scorecards', to='company.CustomTemplateScorecard')),
                ('stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_creation_stage', to='candidate.stage_list')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_creation_temnplate', to='company.template_creation')),
            ],
        ),
        migrations.CreateModel(
            name='CustomResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_file_by_candidate', models.FileField(null=True, upload_to='')),
                ('description_by_candidate', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('candidate_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_CustomResult', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CustomResult', to='company.company')),
                ('custom_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CustomResult_template', to='company.customtemplate')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_id_CustomResult', to='company.jobcreation')),
                ('scorecard_results', models.ManyToManyField(null=True, related_name='CustomResult_scorecards', to='company.CustomScorecardResult')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CustomResult_by_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('universal_Name', models.CharField(max_length=500)),
                ('contact_email', models.EmailField(max_length=254)),
                ('compnay_type', models.CharField(choices=[('Public Company', 'Public Company'), ('Educational', 'Educational'), ('Self Employed', 'Self Employed'), ('Government Agency', 'Government Agency'), ('Non Profit', 'Non Profit'), ('Self Owned', 'Self Owned'), ('Privately Held', 'Privately Held'), ('Partnership', 'Partnership')], max_length=50)),
                ('company_logo', models.ImageField(upload_to='', verbose_name='company_logo_image')),
                ('company_bg', models.ImageField(upload_to='', verbose_name='company_bg_image')),
                ('speciality', models.TextField()),
                ('aboutus', models.TextField()),
                ('address', models.CharField(max_length=200)),
                ('zip_code', models.CharField(max_length=10, null=True)),
                ('contact_no1', models.CharField(max_length=10)),
                ('founded_year', models.CharField(max_length=5)),
                ('employee_count', models.CharField(choices=[('1-10', '1-10 employees'), ('11-50', '11-50 employees'), ('51-200', '51-200 employees'), ('201-500', '201-500 employees'), ('501-1000', '501-1000 employees'), ('1001-5000', '1001-5000 employees'), ('5001-10,000', '5001-10,000 employees'), ('10,001+', '10,001+ employees')], max_length=50)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_city', to='candidate.city')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_profile', to='company.company')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_country', to='candidate.country')),
                ('industry_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_industrytype', to='candidate.industrytype')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_state', to='candidate.state')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyJobShift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CompanyJobShift', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_id', to='company.jobcreation')),
                ('job_shift_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_shift_id', to='candidate.jobshift')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_CompanyJobShift', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyAssignJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recruiter_type_external', models.BooleanField(default=False)),
                ('recruiter_type_internal', models.BooleanField(default=False)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CompanyAssignJob', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_assign_id', to='company.jobcreation')),
                ('recruiter_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_recruiter_id', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_CompanyAssignJob', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('attachment', models.FileField(null=True, upload_to='')),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_colloboration_id', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Collaboration', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_colloboration_id', to='company.jobcreation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_colloboration_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CodingSubjectCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=50)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CodingSubjectCategory', to='company.company')),
                ('subject_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coding_subject_id', to='company.codingsubject')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_CodingSubjectCategory', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='codingsubject',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CodingSubject', to='company.company'),
        ),
        migrations.AddField(
            model_name='codingsubject',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_CodingSubject', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CodingScoreCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('comment', models.TextField(null=True)),
                ('rating', models.CharField(max_length=10, null=True)),
                ('coding_exam_config_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coding_configuration_rating', to='company.codingexamconfiguration')),
            ],
        ),
        migrations.CreateModel(
            name='CodingQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(max_length=50, null=True)),
                ('coding_que_title', models.TextField()),
                ('coding_que_description', tinymce.models.HTMLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coding_category_id', to='company.codingsubjectcategory')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CodingQuestion', to='company.company')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_CodingQuestion', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CodingExamQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.CharField(max_length=10, null=True)),
                ('coding_exam_config_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coding_configuration_id', to='company.codingexamconfiguration')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CodingExamQuestions', to='company.company')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coding_question_id', to='company.codingquestion')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_CodingExamQuestions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='codingexamconfiguration',
            name='coding_category_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='code_exam_config_category_id', to='company.codingsubjectcategory'),
        ),
        migrations.AddField(
            model_name='codingexamconfiguration',
            name='coding_subject_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_config_coding_subject_id', to='company.codingsubject'),
        ),
        migrations.AddField(
            model_name='codingexamconfiguration',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CodingExamConfiguration', to='company.company'),
        ),
        migrations.AddField(
            model_name='codingexamconfiguration',
            name='delete_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_user_id_CodingExamConfiguration', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='codingexamconfiguration',
            name='template_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coding_config_template', to='company.template_creation'),
        ),
        migrations.AddField(
            model_name='codingexamconfiguration',
            name='update_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_user_id_CodingExamConfiguration', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='codingexamconfiguration',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_CodingExamConfiguration', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CandidateTempDatabase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(max_length=10)),
                ('resume', models.FileField(max_length=500, null=True, upload_to=company.models.resume_path_handler)),
                ('contact', models.CharField(max_length=20)),
                ('designation', models.CharField(max_length=100)),
                ('ctc', models.CharField(max_length=100, null=True)),
                ('expectedctc', models.CharField(max_length=100, null=True)),
                ('total_exper', models.CharField(max_length=100, null=True)),
                ('profile_pic', models.ImageField(null=True, upload_to='', verbose_name='candidate_pf_pic_temp_db')),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Candidateid_Candidatetempdatabase_company', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Candidatetempdatabases', to='company.company')),
                ('current_city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Candidatetempdatabase_current_city', to='candidate.city')),
                ('notice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Candidatetempdatabase_notice_period', to='candidate.noticeperiod')),
                ('prefered_city', models.ManyToManyField(null=True, related_name='Candidatetempdatabase_prefered_city', to='candidate.City')),
                ('skills', models.ManyToManyField(null=True, related_name='Candidatetempdatabase_skill_id', to='candidate.Skill')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Candidatetempdatabases', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateSelectedPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_name', models.CharField(max_length=100)),
                ('is_selected', models.BooleanField(null=True)),
                ('candidate_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preference_check_candidate_id', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preference_check_company_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateJobStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_withdraw', models.BooleanField(default=False)),
                ('is_hired', models.BooleanField(default=False)),
                ('candidate_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_JobStatus', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_id_JobStatus', to='company.company')),
                ('hire_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_hired_JobStatus', to=settings.AUTH_USER_MODEL)),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_id_JobStatus', to='company.jobcreation')),
                ('withdraw_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_withdraw_JobStatus', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='candidatejobstagesstatus',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CandidateJobStagesStatus', to='company.company'),
        ),
        migrations.AddField(
            model_name='candidatejobstagesstatus',
            name='job_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StagesStatus_job_workflow_id', to='company.jobcreation'),
        ),
        migrations.AddField(
            model_name='candidatejobstagesstatus',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StagesStatus_workflow_stage', to='candidate.stage_list'),
        ),
        migrations.AddField(
            model_name='candidatejobstagesstatus',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_template_stage_status', to='company.template_creation'),
        ),
        migrations.CreateModel(
            name='CandidateHire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('request_status', models.IntegerField(default=0, null=True)),
                ('candidate_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_hire_id', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Company_id', to=settings.AUTH_USER_MODEL)),
                ('profile_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_id', to='candidate.profile')),
            ],
        ),
        migrations.AddField(
            model_name='candidatecategories',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_CandidateCategories', to='company.company'),
        ),
        migrations.AddField(
            model_name='candidatecategories',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_CandidateCategories', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AudioQuestionPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_AudioQuestionPaper', to='company.company')),
                ('exam_question_units', models.ManyToManyField(related_name='Audio_question_paper_exam_question_units', to='company.AudioExamQuestionUnit')),
                ('exam_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Audio_question_paper_exam_template', to='company.audioexamtemplate')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_AudioQuestionPaper', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='audioexamtemplate',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Audio_creation_category', to='company.templatecategory'),
        ),
        migrations.AddField(
            model_name='audioexamtemplate',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_AudioExamTemplate', to='company.company'),
        ),
        migrations.AddField(
            model_name='audioexamtemplate',
            name='delete_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delete_user_id_AudioExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='audioexamtemplate',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Audio_creation_stage', to='candidate.stage_list'),
        ),
        migrations.AddField(
            model_name='audioexamtemplate',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Audio_subject_temnplate', to='company.audio_subject'),
        ),
        migrations.AddField(
            model_name='audioexamtemplate',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Audio_creation_temnplate', to='company.template_creation'),
        ),
        migrations.AddField(
            model_name='audioexamtemplate',
            name='update_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_user_id_AudioExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='audioexamtemplate',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_AudioExamTemplate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='audioexamquestionunit',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Audio_que_unit_temnplate', to='company.template_creation'),
        ),
        migrations.AddField(
            model_name='audio_subject',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Audio_subject', to='company.company'),
        ),
        migrations.AddField(
            model_name='audio_subject',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Audio_subject', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='audio',
            name='company_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_Audio', to='company.company'),
        ),
        migrations.AddField(
            model_name='audio',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audio_subject', to='company.audio_subject'),
        ),
        migrations.AddField(
            model_name='audio',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_Audio', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AssociateCandidateInternal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_AssociateCandidateInternal_status', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_AssociateCandidateInternal', to='company.company')),
                ('internal_candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companyinternal_candidate_AssociateJob_id', to='company.internalcandidatebasicdetails')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_AssociateCandidateInternal_id', to='company.jobcreation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_AssociateCandidateInternal', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssociateCandidateAgency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('agency_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_Agency_id', to='agency.agency')),
                ('agency_internal_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidateinternal_Agency_id', to='agency.internalcandidatebasicdetail')),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_AssociateCandidateAgency_status', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_AssociateCandidateAgency', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_AssociateCandidateAgency_id', to='company.jobcreation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_AssociateCandidateAgency', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssignInternal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_terminated', models.BooleanField(default=False)),
                ('send_email', models.BooleanField(default=False)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_AssignInternal', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_assigninternal_id', to='company.jobcreation')),
                ('recruiter_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recruiter_job_assigninternal', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_AssignInternal', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssignExternal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_terminated', models.BooleanField(default=False)),
                ('send_email', models.BooleanField(default=False)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_AssignExternal', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_assignexternal_id', to='company.jobcreation')),
                ('recruiter_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recruiter_job_assignexternal', to='agency.agency')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_AssignExternal', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AppliedCandidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, max_length=200)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_candidate_id', to=settings.AUTH_USER_MODEL)),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_id_AppliedCandidate', to='company.company')),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_job_id', to='company.jobcreation')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='create_user_id_AppliedCandidate', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
